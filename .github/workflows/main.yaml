---
name: terrarium - build and test images

on:
  push:
    branches: [master, main, develop]
    tags: ["v*"]
  pull_request:
    branches: [master, main, develop]
  release:
    types: [released]

env:
  # github.repository renders as <owner>/<repo>
  IMAGE_BASE: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      next: ${{ steps.next.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dump-context
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - id: next
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm ci
          npx semantic-release --dry-run | tee sr.log
          echo "version=$(grep -oE 'next release version is [0-9]+\.[0-9]+\.[0-9]+' sr.log | awk '{print $6}')" >> $GITHUB_OUTPUT

  ################################################################################
  # Build & test (amd64)
  ################################################################################
  build-amd64:
    name: Build & test (linux/amd64)
    needs: get-version
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/v')
    permissions: { contents: read, packages: write }
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    env:
      RELEASE_VERSION: ${{ needs.get-version.outputs.next }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/terrarium
          flavor: latest=auto,suffix=-linux-amd64
          tags: |
            # ── use the semantic-release version when present ─────────────
            type=raw,value=v${{ env.RELEASE_VERSION }}-linux-amd64,enable=${{ env.RELEASE_VERSION != '' }}
            # ── normal ref/sha/PR tags (as before) ────────────────────────
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, push & test (amd64)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./terraform/docker
          file: terraform/docker/Dockerfile.terrarium
          platforms: linux/amd64
          target: test
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          sbom: true

  ################################################################################
  # Build & test (arm64)
  ################################################################################
  build-arm64:
    name: Build & test (linux/arm64)
    needs: get-version
    runs-on: ubuntu-22.04-arm
    if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/v')
    permissions: { contents: read, packages: write }
    outputs:
      digest: ${{ steps.build.outputs.digest }}
    env:
      RELEASE_VERSION: ${{ needs.get-version.outputs.next }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/dump-context

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/terrarium
          flavor: latest=auto,suffix=-linux-arm64
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=v${{ env.RELEASE_VERSION }}-linux-arm64,enable=${{ env.RELEASE_VERSION != '' }}
            type=ref,event=branch
            type=ref,event=pr
            type=schedule
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=sha

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, push & test (arm64)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./terraform/docker
          file: terraform/docker/Dockerfile.terrarium
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          target: test

  ################################################################################
  # Create multi-arch manifest and run semantic-release
  ################################################################################

  manifest:
    needs: [get-version, build-amd64, build-arm64]
    if: needs.get-version.outputs.next != ''
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }

    steps:
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create multi-arch manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: |
            ghcr.io/${{ github.repository }}:v${{ needs.get-version.outputs.next }}
            ghcr.io/${{ github.repository }}:latest
          sources: |
            ghcr.io/${{ github.repository }}@${{ needs.build-amd64.outputs.digest }}
            ghcr.io/${{ github.repository }}@${{ needs.build-arm64.outputs.digest }}

      - name: Semantic-release (real run)
        env:
          SEMREL_VERSION: v${{ needs.get-version.outputs.next }}
        run: npx semantic-release
